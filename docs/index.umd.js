(function(i,c){typeof exports=="object"&&typeof module<"u"?c(exports):typeof define=="function"&&define.amd?define(["exports"],c):(i=typeof globalThis<"u"?globalThis:i||self,c(i.stretto={}))})(this,(function(i){"use strict";var Z=Object.defineProperty;var z=(i,c,b)=>c in i?Z(i,c,{enumerable:!0,configurable:!0,writable:!0,value:b}):i[c]=b;var p=(i,c,b)=>z(i,typeof c!="symbol"?c+"":c,b);const T=new TextDecoder,O=new TextEncoder,_=O.encode("data:"),v=O.encode("event:"),D=O.encode("id:"),M=(r,e)=>new Promise((t,o)=>{if(e!=null&&e.aborted)return o(new DOMException("Operation aborted","AbortError"));const s=setTimeout(()=>{a(),t()},r),f=()=>{a(),o((e==null?void 0:e.reason)??new DOMException("Operation aborted","AbortError"))},a=()=>{clearTimeout(s),e==null||e.removeEventListener("abort",f)};e==null||e.addEventListener("abort",f,{once:!0})}),F=r=>typeof r=="object"&&r!==null&&!Array.isArray(r)&&(Object.getPrototypeOf(r)===null||Object.getPrototypeOf(r)===Object.prototype),S=(r,e)=>{if(e.length>r.length)return!1;for(let t=0;t<e.length;t++)if(r[t]!==e[t])return!1;return!0},P=r=>r[0]===32?r.subarray(1):r,A=r=>{try{return JSON.parse(r)}catch{return null}},C=r=>r.status>=500&&r.status<600,U=100,J=5e3,N=2,x=.5,j=r=>{const e=U*Math.pow(N,r-1);return Math.min(J,e)*(1-x+Math.random()*x)};async function q(r,e){const{body:t,headers:o={},retries:s=3,timeout:f=3e4,backoffStrategy:a=j,retryOn:h=C,signal:n,...I}=e;let l,E;for(let d=0;d<s+1;d++){if(n!=null&&n.aborted)throw new DOMException("Operation aborted","AbortError");const u=new AbortController,m=u.signal,y=()=>u.abort(n==null?void 0:n.reason);n==null||n.addEventListener("abort",y,{once:!0});const K=f>0?setTimeout(()=>u.abort(new DOMException("Request timed out","TimeoutError")),f):0;try{d>0&&await M(a(d),m);const w=new Headers(o),L={...I,headers:w,signal:m};F(t)?(w.has("Content-Type")||w.set("Content-Type","application/json"),L.body=JSON.stringify(t)):L.body=t;const B=await fetch(r,L);if(E=B,d<s&&h(B,d))continue;return B}catch(w){if(l=w,n!=null&&n.aborted)throw new DOMException("Operation aborted","AbortError");if(m.aborted)throw u.signal.reason instanceof DOMException?u.signal.reason:l}finally{clearTimeout(K),n==null||n.removeEventListener("abort",y)}}throw E?new Error(`Request failed after all retry attempts. Last response status: ${E.status}`):l??new Error("Request failed after all retry attempts.")}class R{constructor(e={}){p(this,"sseBuffer",[]);p(this,"strict");this.strict=e.strict??!0}parse(e,t){if(e.length===0){this.flushSseBuffer(t);return}if(S(e,_)){const f=T.decode(P(e.subarray(_.length)));this.sseBuffer.push(f);return}if(S(e,v)||S(e,D)||e[0]===58)return;this.flushSseBuffer(t);const o=T.decode(e),s=A(o);if(s!==null)t.enqueue(s);else if(this.strict)throw new TypeError(`Invalid JSON received in stream: "${o}"`)}flush(e){this.flushSseBuffer(e)}flushSseBuffer(e){if(this.sseBuffer.length===0)return;let t;this.sseBuffer.length===1?t=this.sseBuffer[0]:t=this.sseBuffer.join(`
`),this.sseBuffer.length=0;const o=A(t);if(o!==null)e.enqueue(o);else if(this.strict)throw new TypeError(`Invalid JSON received in SSE data buffer: "${t}"`)}reset(){this.sseBuffer.length=0}}class X{constructor(e={}){p(this,"strict");this.strict=e.strict??!0}parse(e,t){if(e.length===0)return;const o=T.decode(e),s=A(o);if(s!==null)t.enqueue(s);else if(this.strict)throw new TypeError(`Invalid JSON received in stream: "${o}"`)}flush(e){}}class g extends TransformStream{constructor(){super({transform:(t,o)=>{if(t.length===0)return;const s=this.leftover.length>0?this.mergeBuffers(this.leftover,t):t;let f=0;for(let a=0;a<s.length;a++)if(s[a]===10){const h=a>0&&s[a-1]===13?a-1:a;o.enqueue(s.subarray(f,h)),f=a+1}this.leftover=f<s.length?s.subarray(f):new Uint8Array(0)},flush:t=>{this.leftover.length>0&&t.enqueue(this.leftover)}});p(this,"leftover",new Uint8Array(0));p(this,"MAX_BUFFER_SIZE",1e6)}mergeBuffers(t,o){if(t.length+o.length>this.MAX_BUFFER_SIZE)throw new Error("LineTransformer buffer exceeded maximum size");const s=new Uint8Array(t.length+o.length);return s.set(t),s.set(o,t.length),s}}class $ extends TransformStream{constructor(e){super({transform:(t,o)=>{e.parse(t,o)},flush:t=>{e.flush(t)}})}}class k extends TransformStream{constructor(e){super({start:t=>{if(e!=null&&e.aborted){t.error(new DOMException("Operation aborted","AbortError"));return}e==null||e.addEventListener("abort",()=>{t.error(new DOMException("Operation aborted","AbortError"))},{once:!0})}})}}async function H(r,e={}){const{stream:t=!1,parser:o,strictJson:s=!0,...f}=e,a=await q(r,f);let h=!1;const n=()=>{if(h)throw new Error("Response body has already been consumed.");return h=!0,a};return{headers:a.headers,ok:a.ok,status:a.status,statusText:a.statusText,url:a.url,get body(){return n().body},json:()=>n().json(),text:()=>n().text(),blob:()=>n().blob(),arrayBuffer:()=>n().arrayBuffer(),formData:()=>n().formData(),async*[Symbol.asyncIterator](){if(!t)throw new Error("Streaming not enabled. Use { stream: true } in options.");const l=n().body;if(!l)return;const E=o??new R({strict:s}),u=l.pipeThrough(new k(f.signal)).pipeThrough(new g).pipeThrough(new $(E)).getReader();try{for(;;){const{done:m,value:y}=await u.read();if(m)break;y!==void 0&&(yield y)}}finally{u.releaseLock()}}}}i.JsonLinesParser=X,i.SseParser=R,i.default=H,Object.defineProperties(i,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})}));
